import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import CallbackQuery, FSInputFile
from aiogram import F
from aiogram import Router

API_TOKEN = '8077962203:AAHHndkIuMJz__r2nOimrh2CGG8vS8OLCDo'


youtube_video_url = "https://www.youtube.com/watch?v=MunPNYumw6M"
video_duration = 120  # –≤—Ä–µ–º—è –≤–∏–¥–µ–æ –æ–±—å—è—Å–Ω–µ–Ω–∏–µ –ø–æ—Å–ª–µ –∫–æ—Ç–æ—Ä–æ–≥–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ

bot = Bot(token=API_TOKEN)
dp = Dispatcher()
router = Router()

#  /start
@router.message(Command("start"))
async def start(message: types.Message):
    # –≤–∏–¥–µ–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º
    video_circle_file = FSInputFile("Resources/hello.MP4")
    await bot.send_video(chat_id=message.chat.id, video=video_circle_file)  #send_video —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∏–¥–µ–æ

    # –∑–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º
    await asyncio.sleep(12)

    #  –∫–Ω–æ–ø–∫–∞ "–ü–æ–ª—É—á–∏—Ç—å –≤–∏–¥–µ–æ—É—Ä–æ–∫"
    markup = types.InlineKeyboardMarkup(inline_keyboard=[
        [types.InlineKeyboardButton(text="‚úÖ –ü–æ–ª—É—á–∏—Ç—å –≤–∏–¥–µ–æ—É—Ä–æ–∫", url=youtube_video_url)]
    ])
    await message.answer("–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ—É—Ä–æ–∫:", reply_markup=markup)

    # —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –ø–æ—Å–ª–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤–∏–¥–µ–æ –ø—Ä–æ–¥–æ–ª–∂–∏–º
    await message.answer("–ü–æ—Å–ª–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤–∏–¥–µ–æ—É—Ä–æ–∫–∞ –º—ã –ø—Ä–æ–¥–æ–ª–∂–∏–º –≤—ã–±–æ—Ä –∫—É—Ä—Å–∞. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è —Å—é–¥–∞, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ!")

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–µ—Ä –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    await asyncio.sleep(video_duration)

    # –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞
    final_text = (
        "–ß—Ç–æ –≤–∞—Å –∂–¥–µ—Ç:\n"
        "- –ê–ª–≥–æ—Ä–∏—Ç–º—ã, —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –∏ —Ñ–∏—à–∫–∏ –ø–æ —é—Ç—É–±\n"
        "- –ü–æ—à–∞–≥–æ–≤—ã–µ —Ç—É—Ç–æ—Ä–∏–∞–ª—ã –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –ø–æ–Ω—è—Ç—å –æ—Å–Ω–æ–≤—É –≤–µ–¥–µ–Ω–∏—è –∫–∞–Ω–∞–ª–æ–≤\n"
        "- –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–µ—Ç—Å–∫–∏–µ/–≤–∑—Ä–æ—Å–ª—ã–µ –Ω–∏—à–∏, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –º–æ–∂–Ω–æ —Å—Ç–∞—Ä—Ç–æ–≤–∞—Ç—å –∏ –≤—ã—Ö–æ–¥–∏—Ç—å –Ω–∞ —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –¥–æ—Ö–æ–¥\n"
        "- –í–∏–¥–µ–æ—É—Ä–æ–∫–∏ –ø–æ 3D –∞–Ω–∏–º–∞—Ü–∏–∏, –º–æ–Ω—Ç–∞–∂—É, –ø—Ä–µ–≤—å—é –∏ –Ω–∏—à–∞–º\n"
        "- –ú–∞—Å—Ç–µ—Ä –∫–ª–∞—Å—Å—ã –æ—Ç –ª—É—á—à–∏—Ö –∫—Ä–µ–∞—Ç–æ—Ä–æ–≤\n"
        "- –°–æ–∑–≤–æ–Ω—ã —Å —ç–∫—Å–ø–µ—Ä—Ç–∞–º–∏ –≤ —Å–≤–æ–∏—Ö –Ω–∏—à–∞—Ö, –∫–æ—Ç–æ—Ä—ã–µ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç –±–æ–ª–µ–µ 500–∫$+ —Å —é—Ç—É–±\n"
        "- –õ—É—á—à–∏–µ –ê—ñ —Å–µ—Ä–≤–∏—Å—ã –¥–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã —Å —é—Ç—É–±–æ–º + —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –∫–æ—Ç–æ—Ä—ã–º–∏ –º—ã –ø–æ–ª—å–∑—É–µ–º—Å—è\n"
        "- –ú–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –≤–∞—à–µ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞\n"
        "- –û–±—â–∏–π —á–∞—Ç –¥–ª—è –æ–±—â–µ–Ω–∏—è\n"
        "- –ë–∏–∑–Ω–µ—Å-–≤–µ—á–µ—Ä–∏–Ω–∫–∏ –≤ —Ä–∞–∑–Ω—ã—Ö –≥–æ—Ä–æ–¥–∞—Ö –º–∏—Ä–∞\n"
        "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è"
    )
    # –∫–Ω–æ–ø–∫–∏ 3
    markup = types.InlineKeyboardMarkup(inline_keyboard=[
        [types.InlineKeyboardButton(text="üí∏ –û–ø–ª–∞—Ç–∏—Ç—å –¥–æ—Å—Ç—É–ø", callback_data="pay")],
        [types.InlineKeyboardButton(text="üìä –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –∫–∞–Ω–∞–ª–µ", callback_data="details")],
        [types.InlineKeyboardButton(text="‚ù§Ô∏è –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", callback_data="ask_question")]
    ])
    await message.answer(final_text, reply_markup=markup)

# –ö–Ω–æ–ø–∫–∞ "–û–ø–ª–∞—Ç–∏—Ç—å –¥–æ—Å—Ç—É–ø"
@router.callback_query(F.data == "pay")
async def handle_payment(call: CallbackQuery):
    payment_text = (
        "–°—Ç–æ–∏–º–æ—Å—Ç—å –∫—É—Ä—Å–∞:\n"
        "49.900 —Ç–µ–Ω–≥–µ\n"
        "9.900 —Ä—É–±–ª–µ–π\n"
        "1.000.000 —Å–æ–º–æ–≤\n"
        "20.000 —Å—É–º–æ–≤\n"
        "–í—ã–±–µ—Ä–∏ —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã."
    )
    markup = types.InlineKeyboardMarkup(inline_keyboard=[
        [types.InlineKeyboardButton(text="üí≥ –û–ø–ª–∞—Ç–∏—Ç—å —Å –ö–∞—Å–ø–∏", url="https://pay.kaspi.kz/pay/9oemyufr")],
        [types.InlineKeyboardButton(text="üí≥ –û–ø–ª–∞—Ç–∏—Ç—å –∫–∞—Ä—Ç–æ–π", callback_data="pay_card")],
        [types.InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_details")]
    ])
    await call.message.edit_text(payment_text, reply_markup=markup)

# –ö–Ω–æ–ø–∫–∞ "–û–ø–ª–∞—Ç–∏—Ç—å –∫–∞—Ä—Ç–æ–π"
@router.callback_query(F.data == "pay_card")
async def handle_pay_card(call: CallbackQuery):
    await call.message.answer("–≠—Ç–æ—Ç —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –ø–æ–∫–∞ –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã.")

# –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
@router.callback_query(F.data == "back_to_details")
async def handle_back_to_details(call: CallbackQuery):
    # –°–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π "–ß—Ç–æ –≤–∞—Å –∂–¥–µ—Ç"
    final_text = (
        "–ß—Ç–æ –≤–∞—Å –∂–¥–µ—Ç:\n"
        "- –ê–ª–≥–æ—Ä–∏—Ç–º—ã, —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –∏ —Ñ–∏—à–∫–∏ –ø–æ —é—Ç—É–±\n"
        "- –ü–æ—à–∞–≥–æ–≤—ã–µ —Ç—É—Ç–æ—Ä–∏–∞–ª—ã –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –ø–æ–Ω—è—Ç—å –æ—Å–Ω–æ–≤—É –≤–µ–¥–µ–Ω–∏—è –∫–∞–Ω–∞–ª–æ–≤\n"
        "- –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–µ—Ç—Å–∫–∏–µ/–≤–∑—Ä–æ—Å–ª—ã–µ –Ω–∏—à–∏, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –º–æ–∂–Ω–æ —Å—Ç–∞—Ä—Ç–æ–≤–∞—Ç—å –∏ –≤—ã—Ö–æ–¥–∏—Ç—å –Ω–∞ —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –¥–æ—Ö–æ–¥\n"
        "- –í–∏–¥–µ–æ—É—Ä–æ–∫–∏ –ø–æ 3D –∞–Ω–∏–º–∞—Ü–∏–∏, –º–æ–Ω—Ç–∞–∂—É, –ø—Ä–µ–≤—å—é –∏ –Ω–∏—à–∞–º\n"
        "- –ú–∞—Å—Ç–µ—Ä –∫–ª–∞—Å—Å—ã –æ—Ç –ª—É—á—à–∏—Ö –∫—Ä–µ–∞—Ç–æ—Ä–æ–≤\n"
        "- –°–æ–∑–≤–æ–Ω—ã —Å —ç–∫—Å–ø–µ—Ä—Ç–∞–º–∏ –≤ —Å–≤–æ–∏—Ö –Ω–∏—à–∞—Ö, –∫–æ—Ç–æ—Ä—ã–µ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç –±–æ–ª–µ–µ 500–∫$+ —Å —é—Ç—É–±\n"
        "- –õ—É—á—à–∏–µ –ê—ñ —Å–µ—Ä–≤–∏—Å—ã –¥–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã —Å —é—Ç—É–±–æ–º + —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –∫–æ—Ç–æ—Ä—ã–º–∏ –º—ã –ø–æ–ª—å–∑—É–µ–º—Å—è\n"
        "- –ú–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –≤–∞—à–µ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞\n"
        "- –û–±—â–∏–π —á–∞—Ç –¥–ª—è –æ–±—â–µ–Ω–∏—è\n"
        "- –ë–∏–∑–Ω–µ—Å-–≤–µ—á–µ—Ä–∏–Ω–∫–∏ –≤ —Ä–∞–∑–Ω—ã—Ö –≥–æ—Ä–æ–¥–∞—Ö –º–∏—Ä–∞\n"
        "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è"
    )

    markup = types.InlineKeyboardMarkup(inline_keyboard=[
        [types.InlineKeyboardButton(text="üí∏ –û–ø–ª–∞—Ç–∏—Ç—å –¥–æ—Å—Ç—É–ø", callback_data="pay")],
        [types.InlineKeyboardButton(text="üìä –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –∫–∞–Ω–∞–ª–µ", callback_data="details")],
        [types.InlineKeyboardButton(text="‚ù§Ô∏è –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", callback_data="ask_question")]
    ])
    await call.message.edit_text(final_text, reply_markup=markup)

# –∫–Ω–æ–ø–∫–∏ "–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –∫–∞–Ω–∞–ª–µ"
@router.callback_query(F.data == "details")
async def handle_details(call: CallbackQuery):
    await call.message.answer("–í—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ, –ø–µ—Ä–µ–π–¥—è –ø–æ —Å—Å—ã–ª–∫–µ:")
    await call.message.answer("https://t.me/c/2455787583/7")
# –∫–Ω–æ–ø–∫–∏ "–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å"
@router.callback_query(F.data == "ask_question")
async def handle_question(call: CallbackQuery):
    await call.message.answer("–í—ã –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å, –Ω–∞–ø–∏—Å–∞–≤ –Ω–∞–º –ø–µ—Ä–µ–π–¥—è –ø–æ —Å—Å—ã–ª–∫–µ:")
    await call.message.answer("https://t.me/c/2455787583/2")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    dp.include_router(router)
    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
