import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import CallbackQuery, FSInputFile
from aiogram import F
from aiogram import Router

API_TOKEN = '8077962203:AAHHndkIuMJz__r2nOimrh2CGG8vS8OLCDo'

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –ª–µ–≥–∫–æ –º–µ–Ω—è—Ç—å
youtube_video_url = "https://www.youtube.com/watch?v=MunPNYumw6M"
video_duration = 120  # –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–∏–¥–µ–æ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö, –∫–æ—Ç–æ—Ä—É—é –º–æ–∂–Ω–æ –º–µ–Ω—è—Ç—å

bot = Bot(token=API_TOKEN)
dp = Dispatcher()
router = Router()

# –•—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö –≤ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–º—è—Ç–∏
user_data = {}


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@router.message(Command("start"))
async def start(message: types.Message):
    # –ò–º–∏—Ç–∏—Ä—É–µ–º "–ø–µ—á–∞—Ç–∞–µ—Ç" —á–µ—Ä–µ–∑ —Ç–∏–ø–∏—á–Ω–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ
    typing_duration = 10  # –í—Ä–µ–º—è, –∫–æ—Ç–æ—Ä–æ–µ –±–æ—Ç "–ø–µ—á–∞—Ç–∞–µ—Ç" (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)
    await bot.send_chat_action(message.chat.id, action=types.ChatActions.TYPING)
    await asyncio.sleep(typing_duration)

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ü–æ–ª—É—á–∏—Ç—å –≤–∏–¥–µ–æ—É—Ä–æ–∫"
    markup = types.InlineKeyboardMarkup(inline_keyboard=[
        [types.InlineKeyboardButton(text="‚úÖ –ü–æ–ª—É—á–∏—Ç—å –≤–∏–¥–µ–æ—É—Ä–æ–∫", url=youtube_video_url)]
    ])
    await message.answer("–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ—É—Ä–æ–∫:", reply_markup=markup)

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–µ—Ä –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    await asyncio.sleep(video_duration)

    # –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Å–ª–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤–∏–¥–µ–æ —Å —Ç—Ä–µ–º—è –∫–Ω–æ–ø–∫–∞–º–∏
    final_text = (
        "–ß—Ç–æ –≤–∞—Å –∂–¥–µ—Ç:\n"
        "- –ê–ª–≥–æ—Ä–∏—Ç–º—ã, —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –∏ —Ñ–∏—à–∫–∏ –ø–æ —é—Ç—É–±\n"
        "- –ü–æ—à–∞–≥–æ–≤—ã–µ —Ç—É—Ç–æ—Ä–∏–∞–ª—ã –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –ø–æ–Ω—è—Ç—å –æ—Å–Ω–æ–≤—É –≤–µ–¥–µ–Ω–∏—è –∫–∞–Ω–∞–ª–æ–≤\n"
        "- –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–µ—Ç—Å–∫–∏–µ/–≤–∑—Ä–æ—Å–ª—ã–µ –Ω–∏—à–∏, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –º–æ–∂–Ω–æ —Å—Ç–∞—Ä—Ç–æ–≤–∞—Ç—å –∏ –≤—ã—Ö–æ–¥–∏—Ç—å –Ω–∞ —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –¥–æ—Ö–æ–¥\n"
        "- –í–∏–¥–µ–æ—É—Ä–æ–∫–∏ –ø–æ 3D –∞–Ω–∏–º–∞—Ü–∏–∏, –º–æ–Ω—Ç–∞–∂—É, –ø—Ä–µ–≤—å—é –∏ –Ω–∏—à–∞–º\n"
        "- –ú–∞—Å—Ç–µ—Ä –∫–ª–∞—Å—Å—ã –æ—Ç –ª—É—á—à–∏—Ö –∫—Ä–µ–∞—Ç–æ—Ä–æ–≤\n"
        "- –°–æ–∑–≤–æ–Ω—ã —Å —ç–∫—Å–ø–µ—Ä—Ç–∞–º–∏ –≤ —Å–≤–æ–∏—Ö –Ω–∏—à–∞—Ö, –∫–æ—Ç–æ—Ä—ã–µ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç –±–æ–ª–µ–µ 500–∫$+ —Å —é—Ç—É–±\n"
        "- –õ—É—á—à–∏–µ –ê—ñ —Å–µ—Ä–≤–∏—Å—ã –¥–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã —Å —é—Ç—É–±–æ–º + —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –∫–æ—Ç–æ—Ä—ã–º–∏ –º—ã –ø–æ–ª—å–∑—É–µ–º—Å—è\n"
        "- –ú–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –≤–∞—à–µ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞\n"
        "- –ú–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –≤–∞—à–µ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞\n"
        "- –û–±—â–∏–π —á–∞—Ç –¥–ª—è –æ–±—â–µ–Ω–∏—è\n"
        "- –ë–∏–∑–Ω–µ—Å-–≤–µ—á–µ—Ä–∏–Ω–∫–∏ –≤ —Ä–∞–∑–Ω—ã—Ö –≥–æ—Ä–æ–¥–∞—Ö –º–∏—Ä–∞\n"
        "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è"
    )

    markup = types.InlineKeyboardMarkup(inline_keyboard=[
        [types.InlineKeyboardButton(text="üí∏ –û–ø–ª–∞—Ç–∏—Ç—å –¥–æ—Å—Ç—É–ø", callback_data="pay")],
        [types.InlineKeyboardButton(text="üìà –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –∫–∞–Ω–∞–ª–µ", callback_data="details")],
        [types.InlineKeyboardButton(text="‚ù§Ô∏è –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", callback_data="ask_question")]
    ])
    await message.answer(final_text, reply_markup=markup)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–û–ø–ª–∞—Ç–∏—Ç—å –¥–æ—Å—Ç—É–ø"
@router.callback_query(F.data == "pay")
async def handle_payment(call: CallbackQuery):
    await call.message.answer("–ü–ª–∞—Ç–µ–∂–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –¥–∞–ª—å–Ω–µ–π—à–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π.")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –∫–∞–Ω–∞–ª–µ"
@router.callback_query(F.data == "details")
async def handle_details(call: CallbackQuery):
    await call.message.answer("–≠—Ç–æ—Ç –∫–∞–Ω–∞–ª –ø–æ—Å–≤—è—â–µ–Ω —Å–∏—Å—Ç–µ–º–Ω–æ–º—É –∞–Ω–∞–ª–∏–∑—É –∏ —É–ª—É—á—à–µ–Ω–∏—é –≤–∞—à–µ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –Ω–∞ YouTube.")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å"
@router.callback_query(F.data == "ask_question")
async def handle_question(call: CallbackQuery):
    await call.message.answer("–í—ã –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å, –Ω–∞–ø–∏—Å–∞–≤ –Ω–∞–º –Ω–∞–ø—Ä—è–º—É—é –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.")


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    dp.include_router(router)
    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
