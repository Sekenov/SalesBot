import telebot
from telebot import types
import time

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
bot = telebot.TeleBot('8077962203:AAHHndkIuMJz__r2nOimrh2CGG8vS8OLCDo')

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_data = {}


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def start(message):
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É "Start"
    markup = types.InlineKeyboardMarkup()
    btn_start = types.InlineKeyboardButton("üöÄ Start", callback_data="start")
    markup.add(btn_start)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π "Start"
    bot.send_message(message.chat.id,
                     "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –≤—ã–±—Ä–∞—Ç—å –∫—É—Ä—Å –∏ –æ—Ñ–æ—Ä–º–∏—Ç—å –æ–ø–ª–∞—Ç—É. –ù–∞–∂–º–∏—Ç–µ 'Start', —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å.",
                     reply_markup=markup)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "Start"
@bot.callback_query_handler(func=lambda call: call.data == "start")
def handle_start(call):
    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –≤–æ–ø—Ä–æ—Å –æ —Å—Ç—Ä–∞–Ω–µ
    markup = types.InlineKeyboardMarkup()
    btn_kz = types.InlineKeyboardButton("üá∞üáø –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω", callback_data="country_kz")
    btn_ru = types.InlineKeyboardButton("üá∑üá∫ –†–æ—Å—Å–∏—è", callback_data="country_ru")
    btn_az = types.InlineKeyboardButton("üá¶üáø –ê–∑–µ—Ä–±–∞–π–¥–∂–∞–Ω", callback_data="country_az")
    markup.add(btn_kz, btn_ru, btn_az)

    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                          text="–ò–∑ –∫–∞–∫–æ–π –≤—ã —Å—Ç—Ä–∞–Ω—ã? –≠—Ç–æ –Ω—É–∂–Ω–æ, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å —Ü–µ–Ω—É –∫—É—Ä—Å–∞ –≤ –≤–∞—à–µ–π –≤–∞–ª—é—Ç–µ.",
                          reply_markup=markup)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Å—Ç—Ä–∞–Ω—ã
@bot.callback_query_handler(func=lambda call: call.data.startswith("country_"))
def handle_country(call):
    country_code = call.data.split("_")[1]
    countries = {"kz": "–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω", "ru": "–†–æ—Å—Å–∏—è", "az": "–ê–∑–µ—Ä–±–∞–π–¥–∂–∞–Ω"}
    country = countries.get(country_code, "–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω")

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç—Ä–∞–Ω—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_data[call.message.chat.id] = {"country": country}

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –∏ –∫–Ω–æ–ø–∫–∞–º–∏ "–í–æ–ø—Ä–æ—Å—ã" –∏ "–ü–µ—Ä–µ–π—Ç–∏ –∫ –∫—É—Ä—Å–∞–º"
    markup = types.InlineKeyboardMarkup()
    btn_questions = types.InlineKeyboardButton("‚ùì –í–æ–ø—Ä–æ—Å—ã", callback_data="questions")
    btn_courses = types.InlineKeyboardButton("üìö –ü–µ—Ä–µ–π—Ç–∏ –∫ –∫—É—Ä—Å–∞–º", callback_data="courses")
    markup.add(btn_questions, btn_courses)

    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                          text=f"–û—Ç–ª–∏—á–Ω–æ, –≤—ã –≤—ã–±—Ä–∞–ª–∏ {country}. –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–í–æ–ø—Ä–æ—Å—ã'. –õ–∏–±–æ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –∫ –≤—ã–±–æ—Ä—É –∫—É—Ä—Å–æ–≤.",
                          reply_markup=markup)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–í–æ–ø—Ä–æ—Å—ã"
@bot.callback_query_handler(func=lambda call: call.data == "questions")
def questions(call):
    # –°–æ–∑–¥–∞–µ–º Inline –∫–Ω–æ–ø–∫–∏ —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏
    markup = types.InlineKeyboardMarkup()
    btn_q1 = types.InlineKeyboardButton("–¢–æ—á–Ω–æ –ª–∏ –≤—ã —Å–∫–∏–Ω–µ—Ç–µ –∫—É—Ä—Å –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã?", callback_data="question_1")
    btn_q2 = types.InlineKeyboardButton("–ö–∞–∫ –¥–æ–ª–≥–æ –¥–ª–∏—Ç—Å—è –∫—É—Ä—Å?", callback_data="question_2")
    btn_q3 = types.InlineKeyboardButton("–ï—Å—Ç—å –ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏?", callback_data="question_3")
    btn_q4 = types.InlineKeyboardButton("–ú–æ–∂–Ω–æ –ª–∏ –≤–µ—Ä–Ω—É—Ç—å –¥–µ–Ω—å–≥–∏?", callback_data="question_4")
    btn_q5 = types.InlineKeyboardButton("–ö–∞–∫–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã —è –ø–æ–ª—É—á—É?", callback_data="question_5")
    markup.add(btn_q1, btn_q2)
    markup.add(btn_q3, btn_q4)
    markup.add(btn_q5)

    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                          text="–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å:", reply_markup=markup)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã
@bot.callback_query_handler(func=lambda call: call.data.startswith("question_"))
def handle_questions(call):
    answers = {
        "question_1": "–î–∞, —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –∫—É—Ä—Å—É.",
        "question_2": "–ö—É—Ä—Å –¥–ª–∏—Ç—Å—è 4 –Ω–µ–¥–µ–ª–∏, –≤–∫–ª—é—á–∞—è –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏ –∑–∞–¥–∞–Ω–∏—è.",
        "question_3": "–î–∞, –º—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É –≤ —Ç–µ—á–µ–Ω–∏–µ 3 –º–µ—Å—è—Ü–µ–≤ –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏.",
        "question_4": "–î–∞, –≤—ã –º–æ–∂–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—å –¥–µ–Ω—å–≥–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 7 –¥–Ω–µ–π –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏, –µ—Å–ª–∏ –∫—É—Ä—Å –≤–∞–º –Ω–µ –ø–æ–¥–æ—à–µ–ª.",
        "question_5": "–í—ã –ø–æ–ª—É—á–∏—Ç–µ –≤–∏–¥–µ–æ—É—Ä–æ–∫–∏, PDF-–º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏ –¥–æ—Å—Ç—É–ø –∫ —Å–æ–æ–±—â–µ—Å—Ç–≤—É."
    }
    bot.send_message(call.message.chat.id, answers[call.data])


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ "–ü–µ—Ä–µ–π—Ç–∏ –∫ –∫—É—Ä—Å–∞–º"
@bot.callback_query_handler(func=lambda call: call.data == "courses")
def handle_courses(call):
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∫—É—Ä—Å–æ–≤
    markup = types.InlineKeyboardMarkup()
    btn_ds = types.InlineKeyboardButton("üß™ Data Science", callback_data="course_ds")
    btn_da = types.InlineKeyboardButton("üìä Data Analytics", callback_data="course_da")
    markup.add(btn_ds, btn_da)

    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                          text="–í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å:", reply_markup=markup)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –∫—É—Ä—Å–∞
@bot.callback_query_handler(func=lambda call: call.data.startswith("course_"))
def handle_selected_course(call):
    course_code = call.data.split("_")[1]
    courses = {"ds": "Data Science", "da": "Data Analytics"}
    course = courses.get(course_code, "Data Science")

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ –æ –∫—É—Ä—Å–µ
    if course == "Data Science":
        bot.send_photo(call.message.chat.id, open("Resources/dataSciencePhoto.jpeg", 'rb'))
        bot.send_video(call.message.chat.id, open("Resources/videoDataScience.mp4", 'rb'))
    elif course == "Data Analytics":
        bot.send_photo(call.message.chat.id, open("Resources/dataAnalysticsPhoto.jpeg", 'rb'))
        bot.send_video(call.message.chat.id, open("Resources/videoDataAnalystics.mp4", 'rb'))

    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –≤–æ—Å–ø—Ä–∏—è—Ç–∏—è
    time.sleep(1)
    bot.send_message(call.message.chat.id, f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫—É—Ä—Å {course}. –í–æ—Ç –Ω–µ–º–Ω–æ–≥–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫—É—Ä—Å–µ.")

    # –ö–Ω–æ–ø–∫–∞ "–û–ø–ª–∞—Ç–∏—Ç—å"
    markup = types.InlineKeyboardMarkup()
    btn_pay = types.InlineKeyboardButton("üí≥ –û–ø–ª–∞—Ç–∏—Ç—å", callback_data="pay")
    markup.add(btn_pay)
    bot.send_message(call.message.chat.id, "–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å —ç—Ç–æ—Ç –∫—É—Ä—Å, –Ω–∞–∂–º–∏—Ç–µ '–û–ø–ª–∞—Ç–∏—Ç—å'.", reply_markup=markup)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ "–û–ø–ª–∞—Ç–∏—Ç—å"
@bot.callback_query_handler(func=lambda call: call.data == "pay")
def handle_payment(call):
    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    country = user_data.get(call.message.chat.id, {}).get("country", "–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω")

    # –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç—Ä–∞–Ω—ã –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ü–µ–Ω—É
    if country == "–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω":
        price = "20,000 —Ç–≥"
    elif country == "–†–æ—Å—Å–∏—è":
        price = "3900 —Ä—É–±–ª–µ–π"
    elif country == "–ê–∑–µ—Ä–±–∞–π–¥–∂–∞–Ω":
        price = "68 –º–∞–Ω–∞—Ç"
    else:
        price = "20,000 —Ç–≥"  # –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

    bot.send_message(call.message.chat.id, f"üíµ –°—Ç–æ–∏–º–æ—Å—Ç—å –∫—É—Ä—Å–∞: {price}. –ö—É—Ä—Å –±—ã–ª –æ–ø–ª–∞—á–µ–Ω. –°–ø–∞—Å–∏–±–æ!")


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling(none_stop=True)
